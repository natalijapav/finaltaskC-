// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniAPISystem.Models;

#nullable disable

namespace UniAPISystem.Migrations
{
    [DbContext(typeof(UniverzitetContext))]
    partial class UniverzitetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APISystem.Entity.Finansije", b =>
                {
                    b.Property<int>("FinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinId"));

                    b.Property<string>("FinansijeNacin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FinId");

                    b.ToTable("Finansiranja", (string)null);
                });

            modelBuilder.Entity("APISystem.Entity.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikId"));

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UlogaId")
                        .HasColumnType("int");

                    b.Property<int?>("UlogaId1")
                        .HasColumnType("int");

                    b.HasKey("KorisnikId");

                    b.HasIndex("KorisnickoIme")
                        .IsUnique();

                    b.HasIndex("UlogaId");

                    b.HasIndex("UlogaId1");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("APISystem.Entity.Ocena", b =>
                {
                    b.Property<int>("OcenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OcenaId"));

                    b.Property<int>("PredmetId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("Vrednost")
                        .HasColumnType("int");

                    b.HasKey("OcenaId");

                    b.ToTable("Ocene");
                });

            modelBuilder.Entity("APISystem.Entity.Osoba", b =>
                {
                    b.Property<int>("OsobaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OsobaId"));

                    b.Property<DateTime>("GodinaRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("OsobaIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OsobaPrezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OsobaId");

                    b.ToTable("Osobe");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("APISystem.Entity.Predmet", b =>
                {
                    b.Property<int>("PredmetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PredmetId"));

                    b.Property<int>("DepartmantId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfesorId")
                        .HasColumnType("int");

                    b.HasKey("PredmetId");

                    b.HasIndex("DepartmantId");

                    b.HasIndex("ProfesorId");

                    b.ToTable("Predmeti");
                });

            modelBuilder.Entity("APISystem.Entity.Uloga", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UlogaId"));

                    b.Property<string>("NazivUloge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UlogaId");

                    b.ToTable("Uloge");
                });

            modelBuilder.Entity("APSystem.Entity.Departmant", b =>
                {
                    b.Property<int>("DepartmantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmantId"));

                    b.Property<string>("DepartmantIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmantId");

                    b.ToTable("Departmanti");
                });

            modelBuilder.Entity("PredmetStudent", b =>
                {
                    b.Property<int>("PredmetId")
                        .HasColumnType("int");

                    b.Property<int>("StudentiOsobaId")
                        .HasColumnType("int");

                    b.HasKey("PredmetId", "StudentiOsobaId");

                    b.HasIndex("StudentiOsobaId");

                    b.ToTable("StudentPredmet", (string)null);
                });

            modelBuilder.Entity("APISystem.Entity.Profesor", b =>
                {
                    b.HasBaseType("APISystem.Entity.Osoba");

                    b.Property<int>("DepartmanId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmantId")
                        .HasColumnType("int");

                    b.HasIndex("DepartmanId");

                    b.HasIndex("DepartmantId");

                    b.ToTable("Profesori", (string)null);
                });

            modelBuilder.Entity("APISystem.Entity.Student", b =>
                {
                    b.HasBaseType("APISystem.Entity.Osoba");

                    b.Property<string>("BrojIndeksa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FinansijeFinId")
                        .HasColumnType("int");

                    b.Property<string>("NacinFinansiranja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("FinansijeFinId");

                    b.ToTable("Studenti", (string)null);
                });

            modelBuilder.Entity("APISystem.Entity.Korisnik", b =>
                {
                    b.HasOne("APISystem.Entity.Uloga", "UlogaKorisnik")
                        .WithMany()
                        .HasForeignKey("UlogaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APISystem.Entity.Uloga", null)
                        .WithMany("Korisnici")
                        .HasForeignKey("UlogaId1");

                    b.Navigation("UlogaKorisnik");
                });

            modelBuilder.Entity("APISystem.Entity.Predmet", b =>
                {
                    b.HasOne("APSystem.Entity.Departmant", "Departmant")
                        .WithMany("Predmeti")
                        .HasForeignKey("DepartmantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APISystem.Entity.Profesor", "Profesor")
                        .WithMany("Predmeti")
                        .HasForeignKey("ProfesorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departmant");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("PredmetStudent", b =>
                {
                    b.HasOne("APISystem.Entity.Predmet", null)
                        .WithMany()
                        .HasForeignKey("PredmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APISystem.Entity.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentiOsobaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APISystem.Entity.Profesor", b =>
                {
                    b.HasOne("APSystem.Entity.Departmant", null)
                        .WithMany("Profesori")
                        .HasForeignKey("DepartmanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("APSystem.Entity.Departmant", "Departmant")
                        .WithMany()
                        .HasForeignKey("DepartmantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APISystem.Entity.Osoba", null)
                        .WithOne()
                        .HasForeignKey("APISystem.Entity.Profesor", "OsobaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departmant");
                });

            modelBuilder.Entity("APISystem.Entity.Student", b =>
                {
                    b.HasOne("APISystem.Entity.Finansije", "Finansije")
                        .WithMany()
                        .HasForeignKey("FinansijeFinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APISystem.Entity.Osoba", null)
                        .WithOne()
                        .HasForeignKey("APISystem.Entity.Student", "OsobaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Finansije");
                });

            modelBuilder.Entity("APISystem.Entity.Uloga", b =>
                {
                    b.Navigation("Korisnici");
                });

            modelBuilder.Entity("APSystem.Entity.Departmant", b =>
                {
                    b.Navigation("Predmeti");

                    b.Navigation("Profesori");
                });

            modelBuilder.Entity("APISystem.Entity.Profesor", b =>
                {
                    b.Navigation("Predmeti");
                });
#pragma warning restore 612, 618
        }
    }
}
